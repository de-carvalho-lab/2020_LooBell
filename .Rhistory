pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro2, cluster_cols = dendro2, annotation_col = metadata[,2:3], annotation_colors = r.config$fig.cols[2:3], labels_row = metadata$`Donor ID (simple)`, labels_col = r.config$simple.cols)
breaksList
pheatmap(mat = meth.cor, color = cols)
cols
dendro <- hclust(as.dist(1-meth.cor), method = "ward.D2")
breaksList <- seq(0.8, 1, by = 0.001)
cols <- colorRampPalette(rev(brewer.pal(n = 7, name = "YlOrRd")))(length(breaksList))
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro, cluster_cols = dendro2, annotation_col = metadata[,2:3], annotation_colors = r.config$fig.cols[2:3], labels_row = metadata$`Donor ID (simple)`, labels_col = r.config$simple.cols)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = metadata[,2:3])
metadata
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = metadata[,4:5])
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_row = metadata)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_row = metadata[,2])
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_row = metadata[,1])
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_row = metadata[,4:5])
metadata[,4:5]
metadata <- read_excel(path = file.path(r.config$dirs$data.dir, "metadata.xlsx"), sheet = "RRBS")
metadata
metadata
metadata$Stimulated
metadata$DAC
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = data.frame(metadata[,4:5]))
data.frame(metadata[,4:5])
annotation_col <- data.frame(metadata[,4:5], row.names = metadata$`Sequencing ID`)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols[2:3])
metadata
annotation_col <- data.frame(metadata[,3:5], row.names = metadata$`Sequencing ID`)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols)
annotation_col <- data.frame(metadata[,3:5], row.names = metadata$`Sequencing ID`)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols)
annotation_col
r.config$fig.cols
colnames(annotation_col)[1] <- "Donor"
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols, show_rownames = FALSE, show_colnames = FALSE, treeheight_row = 15, treeheight_col = 15, fontsize = 6, cellwidth = 12, cellheight = 12)
png.name <- file.path(r.config$dirs$figure.dir,"RRBS_02_corHeatmap.png")
png(filename = png.name, width = 8, height = 6, units = units, res = res, pointsize = pointsize)
r.config$fig.specs
png.name <- file.path(r.config$dirs$figure.dir,"RRBS_02_corHeatmap.png")
png(filename = png.name, width = 8, height = r.config$fig.specs$height, units = r.config$fig.specs$units, res = r.config$fig.specs$res, pointsize = r.config$fig.specs$pointsize)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols, show_rownames = FALSE, show_colnames = FALSE, treeheight_row = 15, treeheight_col = 15, fontsize = 6, cellwidth = 12, cellheight = 12)
dev.off()
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols, show_rownames = FALSE, show_colnames = FALSE, treeheight_row = 15, treeheight_col = 15, fontsize = 6, cellwidth = 12, cellheight = 12)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols, show_rownames = FALSE, show_colnames = FALSE, treeheight_row = 15, treeheight_col = 15, fontsize = 6)
pheatmap(mat = meth.cor, color = cols, breaks = breaksList, border_color = NA, cluster_rows = dendro,cluster_cols = dendro, annotation_col = annotation_col, annotation_colors = r.config$fig.cols, show_rownames = FALSE, show_colnames = FALSE)
meth.df <- getData(x = meth.base)
meth.prop <- array(data = NA, dim = c(nrow(meth.df),length(sample.id)))
sample.name
meth.prop <- array(data = NA, dim = c(nrow(meth.df),length(sample.name)))
for(i in 1:length(sample.name)){
this.sample <- i
col.index <- grep(pattern = this.sample, x = colnames(meth.df))
these.columns <- meth.df[,col.index]
this.prop <- these.columns[,2]/these.columns[,1]
meth.prop[,this.sample] <- this.prop
}
meth.prop
dim(meth.prop)
this.sample
col.index
head(these.columns)
head(this.prop)
classes <- apply(X = metadata[,c("Stimulated","DAC")], MARGIN = 1, FUN = function(X){
this.row <- X
paste(this.row, collapse = "_")
})
classes
unlist(r.config)
unlist(r.config$fig.cols)
classes.unique <- unique(classes)
meth.prop.mean <- array(data = NA, dim = c(nrow(meth.df), length(unique(classes))))
for(i in 1:length(classes.unique)){
this.class <- classes.unique[i]
col.index <- grep(pattern = this.class, x = classes)
these.columns <- meth.prop[,col.index]
row.means <- rowMeans(these.columns)
meth.prop.mean[,i] <- row.means
}
densities <- lapply(X = seq_along(1:length(r.config$simple.cols)), FUN = function(i){
this.col <- meth.prop.mean[,i]
density(x = this.col, bw = 0.01)
})
xlab <- "CpG methylation (%)"
ylab <- "Density"
ylim <- c(0, max(densities[[3]]$y) * 1.1)
par(mar = c(2,2,1,1))
for(i in 1:length(classes.unique)){
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = simple.col[i], las = 1)
}
par(mar = c(2,2,1,1))
for(i in 1:length(classes.unique)){
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = r.config$simple.cols[i], las = 1)
}
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = r.config$simple.cols[i], las = 1, axes = FALSE)
for(i in 1:length(classes.unique)){
png.name <- file.path(results.dir,"figures","manuscript",paste0("RRBS_01_methDensity_byGroup_",classes.unique[i],".png"))
png(filename = png.name, width = 2.5, height = 2.5, units = units, res = res, pointsize = 6)
par(mar = c(1,1,1,1))
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = r.config$simple.cols[i], las = 1, axes = FALSE)
axis(side = 1, at = seq(0,100,20), labels = rep("",6))
axis(side = 2, at = c(0,5,10,15), las = 1, labels = rep("",4))
dev.off()
}
for(i in 1:length(classes.unique)){
png.name <- file.path(r.config$dirs$figure.dir,paste0("RRBS_01_methDensity_byGroup_",classes.unique[i],".png"))
png(filename = png.name, width = 2.5, height = 2.5, units = units, res = res, pointsize = 6)
par(mar = c(1,1,1,1))
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = r.config$simple.cols[i], las = 1, axes = FALSE)
axis(side = 1, at = seq(0,100,20), labels = rep("",6))
axis(side = 2, at = c(0,5,10,15), las = 1, labels = rep("",4))
dev.off()
}
r.config$fig.specs$pointsize
for(i in 1:length(classes.unique)){
png.name <- file.path(r.config$dirs$figure.dir,paste0("RRBS_01_methDensity_byGroup_",classes.unique[i],".png"))
png(filename = png.name, width = 2.5, height = 2.5, units = r.config$fig.specs$units, res = r.config$fig.specs$res, pointsize = r.config$fig.specs$pointsize)
par(mar = c(1,1,1,1))
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = r.config$simple.cols[i], las = 1, axes = FALSE)
axis(side = 1, at = seq(0,100,20), labels = rep("",6))
axis(side = 2, at = c(0,5,10,15), las = 1, labels = rep("",4))
dev.off()
}
head(meth.df)
sample.name
unlist(sample.name)
colnames(meth.df)
paste(c("coverage","numCs","numTs"),unlist(sample.name))
paste(c("coverage","numCs","numTs"),rep(unlist(sample.name), each = 3))
paste(c("coverage","numCs","numTs"),rep(unlist(sample.name), each = 3), sep = ".")
ncol(meth.df)
rrbs_ct_counts <- meth.df
colnames(rrbs_ct_counts)[5:ncol(rrbs_ct_counts)] <- paste(c("coverage","numCs","numTs"),rep(unlist(sample.name), each = 3), sep = ".")
head(rrbs_ct_counts)
rrbs_ct_counts <- meth.df
colnames(rrbs_ct_counts)[5:ncol(rrbs_ct_counts)] <- paste(c("coverage","numCs","numTs"),rep(unlist(sample.name), each = 3), sep = ".")
write.table(x = rrbs_ct_counts, file = file.path(r.config$dirs$table.dir,"rrbs_ct_counts.txt"), sep = "\t", quote = FALSE, row.names = FALSE)
densities <- lapply(X = seq_along(1:length(classes)), FUN = function(i){
this.col <- meth.prop[,i]
density(x = this.col, bw = 0.02)
})
xlab <- "CpG methylation (%)"
ylab <- "Density"
ylim <- c(0, max(densities[[3]]$y) * 1.1)
par(mfrow = c(3,3), mar = c(4,4,1,1))
for(i in 1:length(classes)){
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(simple.col,3)[i], las = 1)
}
par(mfrow = c(3,3), mar = c(4,4,1,1))
for(i in 1:length(classes)){
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1)
}
densities <- lapply(X = seq_along(1:length(classes)), FUN = function(i){
this.col <- meth.prop[,i]
density(x = this.col, bw = 0.02)
})
xlab <- "CpG methylation (%)"
ylab <- "Density"
ylim <- c(0, max(densities[[3]]$y) * 1.1)
par(mfrow = c(3,3), mar = c(4,4,1,1))
for(i in 1:length(classes)){
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1)
}
for(i in 1:length(classes)){
this.sample <- names(classes)[i]
png.name <- file.path(r.config$dirs$figure.dir,paste0("RRBS_S02_methDensity_",this.sample,".png"))
png(filename = png.name, width = 2, height = 2, units = r.config$fig.specs$units, res = r.config$fig.specs$res, pointsize = r.config$fig.specs$pointsize)
par(mar = c(1,1,1,1))
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1, axes = FALSE)
axis(side = 1, at = seq(0,100,20), labels = rep("",6))
axis(side = 2, at = seq(0,10,2), labels = rep("",6))
dev.off()
}
classes
this.sample
names(classes)
for(i in 1:rownames(metadata)){
this.sample <- rownames(metadata)[i]
png.name <- file.path(r.config$dirs$figure.dir,paste0("RRBS_S02_methDensity_",this.sample,".png"))
png(filename = png.name, width = 2, height = 2, units = r.config$fig.specs$units, res = r.config$fig.specs$res, pointsize = r.config$fig.specs$pointsize)
par(mar = c(1,1,1,1))
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1, axes = FALSE)
axis(side = 1, at = seq(0,100,20), labels = rep("",6))
axis(side = 2, at = seq(0,10,2), labels = rep("",6))
dev.off()
}
for(i in 1:nrow(metadata)){
this.sample <- rownames(metadata)[i]
png.name <- file.path(r.config$dirs$figure.dir,paste0("RRBS_S02_methDensity_",this.sample,".png"))
png(filename = png.name, width = 2, height = 2, units = r.config$fig.specs$units, res = r.config$fig.specs$res, pointsize = r.config$fig.specs$pointsize)
par(mar = c(1,1,1,1))
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1, axes = FALSE)
axis(side = 1, at = seq(0,100,20), labels = rep("",6))
axis(side = 2, at = seq(0,10,2), labels = rep("",6))
dev.off()
}
for(i in 1:nrow(metadata)){
this.sample <- metadata$`Sequencing ID`[i]
png.name <- file.path(r.config$dirs$figure.dir,paste0("RRBS_S02_methDensity_",this.sample,".png"))
png(filename = png.name, width = 2, height = 2, units = r.config$fig.specs$units, res = r.config$fig.specs$res, pointsize = r.config$fig.specs$pointsize)
par(mar = c(1,1,1,1))
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1, axes = FALSE)
axis(side = 1, at = seq(0,100,20), labels = rep("",6))
axis(side = 2, at = seq(0,10,2), labels = rep("",6))
dev.off()
}
classes
length(classes)
length(densities)
densities <- lapply(X = seq_along(1:length(r.config$simple.cols)), FUN = function(i){
this.col <- meth.prop[,i]
density(x = this.col, bw = 0.02)
})
xlab <- "CpG methylation (%)"
ylab <- "Density"
ylim <- c(0, max(densities[[3]]$y) * 1.1)
par(mfrow = c(3,3), mar = c(4,4,1,1))
for(i in 1:length(classes)){
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1)
}
length(densities)
classes
i
densities <- lapply(X = seq_along(1:length(r.config$simple.cols)), FUN = function(i){
this.col <- meth.prop[,i]
density(x = this.col, bw = 0.02)
})
length(densities)
dim(meth.prop)
densities <- lapply(X = seq_along(1:ncol(meth.prop)), FUN = function(i){
this.col <- meth.prop[,i]
density(x = this.col, bw = 0.02)
})
xlab <- "CpG methylation (%)"
ylab <- "Density"
ylim <- c(0, max(densities[[3]]$y) * 1.1)
par(mfrow = c(3,3), mar = c(4,4,1,1))
for(i in 1:length(classes)){
plot(x = densities[[i]]$x * 100, y = densities[[i]]$y, ylim = ylim, xlab = xlab, ylab = ylab, type = "l", lwd = 2, col = rep(r.config$simple.cols,3)[i], las = 1)
}
library(readxl)
library(vtree)
library(methylKit)
library(RColorBrewer)
library(pheatmap)
r.config <- readRDS(file = file.path("code","r_config.RDS"))
metadata <- read_excel(path = file.path(r.config$dirs$data.dir, "metadata.xlsx"), sheet = "RRBS")
metadata
vtree(z = metadata, vars = c("Stimulated","DAC"))
meth.files <- as.list(list.files(path = file.path(r.config$dirs$augmented.data.dir,"01_rrbs_methylKit"), pattern = "CpG.txt"))
meth.files <- as.list(file.path(r.config$dirs$augmented.data.dir,"01_rrbs_methylKit",meth.files))
meth.ids <- lapply(X = meth.files, FUN = function(X){
this.meth <- X
strsplit(x = this.meth, split = "/")[[1]][length(strsplit(x = this.meth, split = "/")[[1]])]
})
sample.name <- lapply(X = meth.ids, FUN = function(X){
this.meth <- X
strsplit(x = this.meth, split = "_")[[1]][1]
})
treatment <- rep(c(0,1,2),3)
names(treatment) <- sample.name
meth.raw <- methRead(location = meth.files, sample.id = sample.name, assembly="hg19", context = "CpG", treatment = treatment)
stats.files <- list.files(path = file.path(r.config$dirs$augmented.data.dir,"01_rrbs_methylKit"), pattern = "_conversionStats.txt")
conversion.stats <- lapply(X = stats.files, FUN = function(X){
this.file <- X
this.table <- read.table(text = gsub(pattern = ":|=", replacement = "\t", x = readLines(con = file.path(r.config$dirs$augmented.data.dir,"01_rrbs_methylKit",this.file))), sep = "\t", header = FALSE, skip = 2, stringsAsFactors = FALSE, col.names = c("Statistic","Count"), row.names = 1)
})
names(conversion.stats) <- stats.files
conversion.stats.ma <- matrix(data = unlist(conversion.stats), nrow = 6, ncol = 9, byrow = FALSE)
conversion.stats.ma <- conversion.stats.ma[c(2,4,6),]
colnames(conversion.stats.ma) <- unique(metadata$`Sequencing ID`)
rownames(conversion.stats.ma) <- c("Average","Forward","Reverse")
conversion.stats.ma
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(98.95,98.95), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-1,-1), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(98.95,98.95), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-1.5,-1.5), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(98.95,98.95), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-2,-2), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(98.95,98.95), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-4,-4), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(98.95,98.95), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(98.9,98.9), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(98.95,98.95), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-7,-7), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,7,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.12, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -1, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.5, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.1, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,5,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.2, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,7,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.2, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,7,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.3, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,7,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-10,-10), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-10,-10), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.25, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,7,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-12,-12), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-12,-12), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-12,-12), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-5,-5), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.25, xpd = TRUE, title = "Strand")
bp <- barplot(height = conversion.stats.ma, beside = TRUE, plot = FALSE)
x.text <- bp[2,c(2,5,8)]
x.lines <- bp[c(1,3),]
par(mar = c(4,4,7,2))
barplot(height = conversion.stats.ma, beside = TRUE, ylim = c(0,100), xpd = FALSE, names.arg = rep("",9), ylab = "Rate (%)", main = "Bisulphite conversion efficiency", las = 1)
mtext(text = unique(metadata$`Donor ID (simple)`), side = 1, line = 2, at = x.text)
lines(x = c(bp[1,1],bp[3,3]), y = c(-12,-12), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,4],bp[3,6]), y = c(-12,-12), xpd = TRUE, lwd = 7)
lines(x = c(bp[1,7],bp[3,9]), y = c(-12,-12), xpd = TRUE, lwd = 7)
for(i in 1:ncol(x.lines)){
lines(x = x.lines[,i], y = c(-7,-7), xpd = TRUE, lwd = 7, col = rep(r.config$simple.cols,3)[i])
}
legend("top", legend = rownames(conversion.stats.ma), fill = grey.colors(n = 3), horiz = TRUE, bty = "n", inset = -0.25, xpd = TRUE, title = "Strand")
